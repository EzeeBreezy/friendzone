#!/usr/bin/env node

require('dotenv').config()

/**
 * Module dependencies.
 */
const app = require('../app')
const http = require('http')
const mongoose = require('mongoose')

/**
 * Get port from environment and store in Express.
 */
const PORT = normalizePort(process.env.PORT || '5000')
app.set('port', PORT)

/**
 * Create HTTP server.
 */
const server = http.createServer(app)

/**
 * Connect to db and Listen on provided port, on all network interfaces.
 */
;(async () => {
   try {
      await mongoose.connect(process.env.DB_URI, {
         useNewUrlParser: true,
         useUnifiedTopology: true,
         useCreateIndex: true,
      })
      server.listen(PORT, () => console.log(`App has been started on port ${PORT}...`))
   } catch (e) {
      console.log('Server Error', e.message)
      process.exit(1)
   }
})()

/**
 * Normalize a port into a number, string, or false.
 */
function normalizePort(val) {
   const port = parseInt(val, 10)

   if (isNaN(port)) {
      // named pipe
      return val
   }

   if (port >= 0) {
      // port number
      return port
   }

   return false
}
